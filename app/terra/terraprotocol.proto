// This file is a direct copy of: https://github.com/FlapKap/nebulastream-ed-runtime/blob/main/proto/EndDeviceProtocol.proto

syntax = "proto3";
import "nanopb.proto";

package TerraProtocol;


enum ExpressionInstructions {
    CONST = 0;
    VAR = 1;
    AND = 2;
    OR = 3;
    NOT = 4;
    LT = 5;
    GT = 6;
    EQ = 7;
    ADD = 8;
    SUB = 9;
    MUL = 10;
    DIV = 11;
    MOD = 12;
    LOG = 13;
    POW = 14;
    SQRT = 15;
    EXP = 16;
    CEIL = 17;
    FLOOR = 18;
    ROUND = 19;
    ABS = 20;
    LTEQ = 21;
    GTEQ = 22;
}

message Data {
    oneof data{
        ExpressionInstructions instruction = 1;
        uint32 _uint8 = 2;
        uint32 _uint16 = 3;
        uint32 _uint32 = 4;
        uint64 _uint64 = 5;
        sint32 _int8 = 6;
        sint32 _int16 = 7;
        sint32 _int32 = 8;
        sint64 _int64 = 9;
        float _float = 10;
        double _double = 11;
    }
}

message ScalarResponse {
    Data value = 1;
}

message WindowResponse {
    Data firstValue = 1;
    Data lastValue = 2;
    Data aggregate = 3;
}

message ResponseValue {
    oneof value {
        ScalarResponse scalarValue = 1;
        WindowResponse windowValue = 2;
    }
}
message QueryResponse {
    uint32 queryId = 1;
    repeated ResponseValue response = 2 [(nanopb).max_count = 5];
}

message Output {
    repeated QueryResponse responses = 1 [(nanopb).max_count = 1];
}

message Expression {
    repeated Data instructions = 1 [(nanopb).max_count = 16];
}

message MapOperation {
    Expression function = 1;
    int32 attribute = 2;
}

message FilterOperation {
    Expression predicate = 1;
}

enum WindowAggregationFunction {
    MIN = 0;
    MAX = 1;
    SUM = 2;
    AVG = 3;
    COUNT = 4;
    PRODUCT = 5;
}

message WindowOperationTumbling {
    uint32 size_ms = 1;
}

message WindowOperationSliding {
    uint32 size_ms = 1;
    uint32 slide_ms = 2;
}

message WindowOperationThreshold {
    Expression predicate = 1;
    uint32 minimumSize_ms = 2; 
}

message WindowOperation {
    WindowAggregationFunction aggregationFunction = 1;
    int32 startAttribute = 2;
    int32 endAttribute = 3;
    int32 resultAttribute = 4;
    int32 readAttribute = 5;
    oneof window {
        WindowOperationTumbling tumbling = 6;
        WindowOperationSliding sliding = 7;
        WindowOperationThreshold threshold = 8;
    }
}

message Operation {
    oneof operation {
        MapOperation map = 1;
        FilterOperation filter = 2;
        WindowOperation window = 3;    
    }
}

message Query {
    repeated Operation operations = 1 [(nanopb).max_count = 2];   
}

message Message {
    repeated Query queries = 1 [(nanopb).max_count = 1];
}